'use strict';

console.log(document.documentElement);
console.log(document.head);
console.log(document.body);

const header = document.querySelector('.header');
const allSections = document.querySelectorAll('.section');
console.log(allSections);

document.getElementById('section--1');
const allButtons = document.getElementsByTagName('button');
console.log(allButtons);

console.log(document.getElementsByClassName('btn'));

// Creating and inserting elements
const message = document.createElement('div');
message.classList.add('cookie-message');
// message.textContent = 'We use cookied for improved functionality and analytics.';
message.innerHTML =
  'We use cookied for improved functionality and analytics. <button class="btn btn--close-cookie">Got it!</button>';

// header.prepend(message);
header.append(message);
// header.append(message.cloneNode(true));

// header.before(message);
// header.after(message);

// Delete elements
document
  .querySelector('.btn--close-cookie')
  .addEventListener('click', function () {
    // message.remove();
    message.parentElement.removeChild(message);
  });

// TODO Smooth Scroll

  const btnScrollTo = document.querySelector('.btn--scroll-to');// button ch·ª©a s·ª± ki·ªán scroll
  const section1 = document.querySelector('#section--1');// kh·ªëi section scroll ƒë·∫øn

  btnScrollTo.addEventListener('click',function(e){

    /**
     * trong html, h·ªá to·∫°n ƒë·ªë d·∫Ω l√† 0 - x
     *                              |
     *                              Y
     * ! ko c√≥ chi·ªÅu √¢m ƒë√¢u nh√° üòá
     */

    const s1coords = section1.getBoundingClientRect();// x√°c ƒë·ªãnh kh·ªëi mu·ªën scroll ƒë·∫øn
                              //! li√™n quan ƒë·∫øn c·ª≠a s·ªï tr√¨nh duy·ªát =>> c·ª±c k·ª≥ ƒë·ªÉ √Ω ƒëi·ªÅu n√†y
    console.log(s1coords);
    
    console.log(e.target.getBoundingClientRect());// x·∫°c ƒë·ªãnh v·ªã tr√≠ button ƒë·ªÉ b·∫Øt ƒë·∫ßu cu·ªôn

    console.log('Current scroll (X/Y)',window.pageXOffset,window.pageYOffset);
            /**
             * ƒê·ªô cu·ªôn m√†n h√¨nh theo chi·ªÅu r·ªông v√† cao (x,y)
             * ? Gi·ªù h√£y th·ª≠ k√©o m√†n h√¨nh theo chi·ªÅu d·ªçc xu·ªëng 1 t√Ω r·ªìi nh·∫•n button =>> th√¥ng s·ªë in ra s·∫Ω thay ƒë·ªïi
             */
    console.log(
      'height/width viewport',
      document.documentElement.clientHeight,
      document.documentElement.clientWidth
    );

    // Scrolling
    // scrollTo(s1coords.left,s1coords.top);// value start - value end
          /**
           * ! k√©o c·ª≠a s·ªï tr√¨nh duy·ªát xu·ªëng 1 t√Ω r·ªìi nh·∫•n button =>> b·ªã l·ªói v√¨ getBoundingClientRect c·ªßa s1coords ph·ª• thu·ªôc v√†o m√†n h√¨nh tr√¨nh duy·ªát
           * ! animation k ƒëc m∆∞·ª£t cho l·∫Øm
           */
    
    // TODO fix k√©o c·ª≠a s·ªï nh·∫•n button k ƒëc n·ªØa
      // ? V√¨ method getBoundingClientRect() ph·ª• thu·ªôc v√†o c·ª≠a s·ªï m√†n h√¨nh =>> khi k√©o xuongs th√¨ ·∫£nh h∆∞·ªüng ƒë·∫øn t·ªça ƒë·ªô X, Y
      // ? h·ªá t·ªça ƒë·ªì t√¥i ƒë√£ l∆∞u √Ω ·ªü tr√™n r·ªìi
    // scrollTo(
    //   s1coords.left + window.pageXOffset,
    //   s1coords.top + window.pageYOffset,
    //   );

    // TODO fix animation m∆∞·ª£t
        // c√°ch 1: 
    // scrollTo({
    //   left: s1coords.left + window.pageXOffset,
    //   top: s1coords.top + window.pageYOffset,
    //   behavior: 'smooth',
    // });

      // c√°ch 2
    // section1.scrollIntoView({behavior:'smooth'}); //! √°p d·ª•ng v·ªõi c√°c tr√¨nh duy·ªát si√™u hi·ªán ƒë·∫°i üòé
  })
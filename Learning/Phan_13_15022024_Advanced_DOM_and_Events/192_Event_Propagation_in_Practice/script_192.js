'use strict';

// TODO 1)
// rbg(255,255,255)
const randomInt = (min,max) => Math.floor(Math.random()*(max-min+1)+min);// ? t·∫°i sao c√¥ng th·ª©c random l·∫°i th·∫ø n√†y

const randomColor = () => `rgb(${randomInt(0,255)},${randomInt(0,255)},${randomInt(0,255)})`

document.querySelector('.nav__link').addEventListener('click',function (e){
  this.style.backgroundColor = randomColor();
  console.log('LINK', e.target, e.currentTarget);
});

document.querySelector('.nav__links').addEventListener('click', function (e){
  this.style.backgroundColor = randomColor();
  console.log('CONTAINER', e.target, e.currentTarget);

  console.log(e.currentTarget === this);

  // Stop propagation =>> ph·∫ßn t·ª≠ cha s·∫Ω k ƒëc nh·∫≠n s·ª± ki·ªán click c·ªßa con
  // e.stopPropagation();
})

document.querySelector('.nav').addEventListener('click',function(e){
  this.style.backgroundColor = randomColor();
  console.log('NAV', e.target, e.currentTarget);
});

// * N·∫øu b·∫°n ƒë·ªÉ ƒë·ªëi s·ªë th·ª© 3 c·ªßa addEventListener() = true =>> s·ª± ki·ªán ƒëc g·∫Øn v√†o n√≥ s·∫Ω ƒë∆∞·ª£c th·ª±c hi·ªán ƒë·∫ßu ti√™n 
// document.querySelector('.nav').addEventListener('click',function(e){
//   this.style.backgroundColor = randomColor();
//   console.log('NAV', e.target, e.currentTarget);
// },true);

// TODO 2)
/**
 * ? e.target: N√≥ tr·∫£ v·ªÅ m·ªôt DOM element m√† ng∆∞·ªùi d√πng click v√†o, c√≤n e.currentTarget() s·∫Ω tr·∫£ v·ªÅ DOM element m√† ta ƒë√£ th√™m s·ª± ki·ªán listener 
 * E.BUBBLING_PHASE: Khi m√† th√¥ng tin s·ª± ki·ªán truy·ªÅn xu·ªëng qua c√°c element con c·ªßa n√≥.
 * E.CAPTURING_PHASE: Th√¥ng tin s·ª± ki·ªán truy·ªÅn l√™n t·ªõi c√°c element cha c·ªßa n√≥.
 * N·∫øu th√™m v√†o true th√¨ s·∫Ω chuy·ªÉn sang phase capturing.
 */

/**
 * * T√¥i s·∫Ω n√≥i l·∫°i b√†i trc 1 t√Ω 
 * ? m√¥ h√¨nh ho·∫°t ƒë·ªông khi c√≥ s·ª± ki·ªán: 
 *      1) CAPTURING_PHASE: tr√¨nh duy·ªát t√¨m t·ª´ tr√™n xu·ªëng, tr√¨nh duy·ªát ƒëi qua c√°c ph·∫ßn t·ª≠ t·ª´ ph·∫ßn t·ª≠ g·ªëc c·ªßa 
 *         t√†i li·ªáu xu·ªëng t·ªõi ph·∫ßn t·ª≠ g·ªëc c·ªßa s·ª± ki·ªán ƒë·ªÉ xem xem c√≥ x·ª≠ l√Ω s·ª± ki·ªán n√†o ƒë∆∞·ª£c g√°n cho ch√∫ng kh√¥ng 
 *            ! nh√¨n v√†o v√≠ d·ª• sau s·∫Ω hi·ªÉu nh√° 
 *                  <div><a>click me</a></div>
 *                 üåª Tr√¨nh duy·ªát ƒëi qua div -> a -> click me 
 *                 üåª t·ª©c l√† n·∫øu khi th·ª±c hi·ªán m√† div ƒëc g·∫Øn s·ª± ki·ªán =>> nh·∫•n v√†o a th√¨ c≈©ng s·∫Ω k√≠ch ho·∫°t s·ª± ki·ªán ƒëc ƒëc g√°n v√†o div lun
 *      2) TARGET_PHASE: khi t√¨m th·∫•y ph·∫ßn t·ª≠ html ƒëc g√°n =>> k√≠ch ho·∫°t 
 *      3) BUBBLING_PHASE: k√≠ch ho·∫°t c√°c s·ª± ki·ªán li√™n quan ƒë·∫øn ph·∫ßn t·ª≠ html ƒë√≥
 *          üåª v√≠ d·ª• ·ªü ph·∫ßn 1): sau khi th·ª±c hi·ªán s·ª± ki·ªán ·ªü th·∫ª a =>> l√∫c n√†y tr√¨nh duy·ªát xem v√† ph√°t hi·ªán th·∫ª cha - div c≈©ng c√≥ s·ª± ki·ªán
 *             click tr√¨nh duy·ªát k√≠ch ho·∫°t lu√¥n s·ª± ki·ªán c·ªßa div
 *              ! tui ƒëang n√≥i trong tr∆∞·ªùng h·ª£p th·∫ª a ƒë√® l√™n th·∫ª div v√† 2 kh·ª©a n√†y ƒë·ªÅu c√≥ s·ª± ki·ªán click 
 */